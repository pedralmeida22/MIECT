library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity TimerCounter is
	port(clk, enable : in std_logic;
		  countOut : out std_logic_vector(15 downto 0);
		  termCount : out std_logic);
end TimerCounter;

architecture Behavioral of TimerCounter is
	
	signal s_count : unsigned(15 downto 0);
	signal s_termCount : std_logic;
	
begin

	process(clk)
	begin		
		if((enable and (not s_termCount)) = '1') then
		
			if((s_count(11 downto 0) = (others => '0')) and (s_count(15 downto 12) /= (others => '0'))) then
			
				s_count <= s_count - 16x"6A7";
			elsif ((s_count(7 downto 0) = (others => '0')) and (s_count(15 downto 8) /= (others => '0')))
			
				s_count <= s_count - 16x"A7";
			elsif ((s_count(3 downto 0) = (others => '0')) and (s_count(15 downto 4) /= (others => '0')))
			
				s_count <= s_count - 16x"7";
			else
			
				s_count <= s_count - 16x"1";
			end if;
		end if
		if (s_count = (others => '0')) then
			s_termCount <= '1'
		end if;
	end process;

	termCount <= s_termCount;
	countOut <= std_logic_vector(s_count);
	
end Behavioral;
		
				