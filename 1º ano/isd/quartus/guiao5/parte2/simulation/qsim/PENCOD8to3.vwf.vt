// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/06/2018 15:43:07"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          PENCOD8to3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module PENCOD8to3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg enable;
reg in0;
reg in1;
reg in2;
reg in3;
reg in4;
reg in5;
reg in6;
reg in7;
// wires                                               
wire EO;
wire out0;
wire out1;
wire out2;
wire valido;

// assign statements (if any)                          
PENCOD8to3 i1 (
// port map - connection between master ports and signals/registers   
	.enable(enable),
	.EO(EO),
	.in0(in0),
	.in1(in1),
	.in2(in2),
	.in3(in3),
	.in4(in4),
	.in5(in5),
	.in6(in6),
	.in7(in7),
	.out0(out0),
	.out1(out1),
	.out2(out2),
	.valido(valido)
);
initial 
begin 
#1000000 $finish;
end 

// enable
initial
begin
	enable = 1'b0;
end 

// in0
initial
begin
	in0 = 1'b0;
	in0 = #80000 1'b1;
end 

// in1
initial
begin
	in1 = 1'b0;
	in1 = #140000 1'b1;
end 

// in2
initial
begin
	in2 = 1'b0;
	in2 = #240000 1'b1;
end 

// in3
initial
begin
	in3 = 1'b0;
	in3 = #460000 1'b1;
end 

// in4
initial
begin
	in4 = 1'b0;
	in4 = #520000 1'b1;
end 

// in5
initial
begin
	in5 = 1'b0;
	in5 = #600000 1'b1;
end 

// in6
initial
begin
	in6 = 1'b0;
	in6 = #680000 1'b1;
end 

// in7
initial
begin
	in7 = 1'b0;
	in7 = #760000 1'b1;
end 
endmodule

