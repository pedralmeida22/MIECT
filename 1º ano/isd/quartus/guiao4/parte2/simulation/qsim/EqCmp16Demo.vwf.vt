// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/23/2018 16:17:07"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          EqCmp16Demo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module EqCmp16Demo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [15:0] inPort0;
reg [15:0] inPort1;
// wires                                               
wire pin_name9;

// assign statements (if any)                          
EqCmp16Demo i1 (
// port map - connection between master ports and signals/registers   
	.inPort0(inPort0),
	.inPort1(inPort1),
	.pin_name9(pin_name9)
);
initial 
begin 
#1000000 $finish;
end 
// inPort0[ 15 ]
initial
begin
	inPort0[15] = 1'b1;
	inPort0[15] = #100000 1'b0;
	inPort0[15] = #50000 1'b1;
	inPort0[15] = #50000 1'b0;
	inPort0[15] = #50000 1'b1;
	inPort0[15] = #100000 1'b0;
	inPort0[15] = #100000 1'b1;
	inPort0[15] = #100000 1'b0;
	inPort0[15] = #150000 1'b1;
	inPort0[15] = #50000 1'b0;
	inPort0[15] = #50000 1'b1;
	inPort0[15] = #100000 1'b0;
end 
// inPort0[ 14 ]
initial
begin
	inPort0[14] = 1'b0;
	inPort0[14] = #50000 1'b1;
	inPort0[14] = #50000 1'b0;
	inPort0[14] = #50000 1'b1;
	inPort0[14] = #100000 1'b0;
	inPort0[14] = #50000 1'b1;
	inPort0[14] = #100000 1'b0;
	inPort0[14] = #100000 1'b1;
	inPort0[14] = #50000 1'b0;
	inPort0[14] = #100000 1'b1;
	inPort0[14] = #50000 1'b0;
	inPort0[14] = #200000 1'b1;
end 
// inPort0[ 13 ]
initial
begin
	inPort0[13] = 1'b0;
	inPort0[13] = #50000 1'b1;
	inPort0[13] = #50000 1'b0;
	inPort0[13] = #50000 1'b1;
	inPort0[13] = #50000 1'b0;
	inPort0[13] = #50000 1'b1;
	inPort0[13] = #50000 1'b0;
	inPort0[13] = #100000 1'b1;
	inPort0[13] = #50000 1'b0;
	inPort0[13] = #50000 1'b1;
	inPort0[13] = #50000 1'b0;
	inPort0[13] = #100000 1'b1;
	inPort0[13] = #100000 1'b0;
end 
// inPort0[ 12 ]
initial
begin
	inPort0[12] = 1'b0;
	inPort0[12] = #50000 1'b1;
	inPort0[12] = #100000 1'b0;
	inPort0[12] = #50000 1'b1;
	inPort0[12] = #50000 1'b0;
	inPort0[12] = #50000 1'b1;
	inPort0[12] = #100000 1'b0;
	inPort0[12] = #150000 1'b1;
	inPort0[12] = #100000 1'b0;
	inPort0[12] = #50000 1'b1;
	inPort0[12] = #150000 1'b0;
end 
// inPort0[ 11 ]
initial
begin
	inPort0[11] = 1'b1;
	inPort0[11] = #50000 1'b0;
	inPort0[11] = #100000 1'b1;
	inPort0[11] = #200000 1'b0;
	inPort0[11] = #150000 1'b1;
	inPort0[11] = #50000 1'b0;
	inPort0[11] = #100000 1'b1;
	inPort0[11] = #100000 1'b0;
	inPort0[11] = #50000 1'b1;
	inPort0[11] = #50000 1'b0;
	inPort0[11] = #50000 1'b1;
end 
// inPort0[ 10 ]
initial
begin
	inPort0[10] = 1'b0;
	inPort0[10] = #50000 1'b1;
	inPort0[10] = #50000 1'b0;
	inPort0[10] = #50000 1'b1;
	inPort0[10] = #50000 1'b0;
	inPort0[10] = #150000 1'b1;
	inPort0[10] = #350000 1'b0;
	inPort0[10] = #100000 1'b1;
	inPort0[10] = #100000 1'b0;
end 
// inPort0[ 9 ]
initial
begin
	inPort0[9] = 1'b0;
	inPort0[9] = #100000 1'b1;
	inPort0[9] = #150000 1'b0;
	inPort0[9] = #50000 1'b1;
	inPort0[9] = #150000 1'b0;
	inPort0[9] = #150000 1'b1;
	inPort0[9] = #100000 1'b0;
	inPort0[9] = #50000 1'b1;
	inPort0[9] = #100000 1'b0;
end 
// inPort0[ 8 ]
initial
begin
	inPort0[8] = 1'b0;
	inPort0[8] = #100000 1'b1;
	inPort0[8] = #100000 1'b0;
	inPort0[8] = #250000 1'b1;
	inPort0[8] = #50000 1'b0;
	inPort0[8] = #50000 1'b1;
	inPort0[8] = #100000 1'b0;
	inPort0[8] = #250000 1'b1;
	inPort0[8] = #50000 1'b0;
end 
// inPort0[ 7 ]
initial
begin
	inPort0[7] = 1'b0;
	inPort0[7] = #50000 1'b1;
	inPort0[7] = #150000 1'b0;
	inPort0[7] = #100000 1'b1;
	inPort0[7] = #50000 1'b0;
	inPort0[7] = #150000 1'b1;
	inPort0[7] = #50000 1'b0;
	inPort0[7] = #100000 1'b1;
	inPort0[7] = #50000 1'b0;
	inPort0[7] = #50000 1'b1;
	inPort0[7] = #150000 1'b0;
end 
// inPort0[ 6 ]
initial
begin
	inPort0[6] = 1'b0;
	inPort0[6] = #200000 1'b1;
	inPort0[6] = #50000 1'b0;
	inPort0[6] = #150000 1'b1;
	inPort0[6] = #100000 1'b0;
	inPort0[6] = #150000 1'b1;
	inPort0[6] = #50000 1'b0;
	inPort0[6] = #50000 1'b1;
	inPort0[6] = #50000 1'b0;
	inPort0[6] = #100000 1'b1;
	inPort0[6] = #50000 1'b0;
end 
// inPort0[ 5 ]
initial
begin
	inPort0[5] = 1'b1;
	inPort0[5] = #150000 1'b0;
	inPort0[5] = #100000 1'b1;
	inPort0[5] = #200000 1'b0;
	inPort0[5] = #100000 1'b1;
	inPort0[5] = #150000 1'b0;
end 
// inPort0[ 4 ]
initial
begin
	inPort0[4] = 1'b0;
	inPort0[4] = #150000 1'b1;
	inPort0[4] = #50000 1'b0;
	inPort0[4] = #50000 1'b1;
	inPort0[4] = #250000 1'b0;
	inPort0[4] = #100000 1'b1;
	inPort0[4] = #150000 1'b0;
	inPort0[4] = #50000 1'b1;
	inPort0[4] = #100000 1'b0;
	inPort0[4] = #50000 1'b1;
end 
// inPort0[ 3 ]
initial
begin
	inPort0[3] = 1'b0;
	inPort0[3] = #50000 1'b1;
	inPort0[3] = #50000 1'b0;
	inPort0[3] = #50000 1'b1;
	inPort0[3] = #100000 1'b0;
	inPort0[3] = #150000 1'b1;
	inPort0[3] = #50000 1'b0;
	inPort0[3] = #100000 1'b1;
	inPort0[3] = #50000 1'b0;
	inPort0[3] = #50000 1'b1;
	inPort0[3] = #50000 1'b0;
	inPort0[3] = #50000 1'b1;
	inPort0[3] = #150000 1'b0;
end 
// inPort0[ 2 ]
initial
begin
	inPort0[2] = 1'b1;
	inPort0[2] = #150000 1'b0;
	inPort0[2] = #100000 1'b1;
	inPort0[2] = #50000 1'b0;
	inPort0[2] = #150000 1'b1;
	inPort0[2] = #150000 1'b0;
	inPort0[2] = #100000 1'b1;
	inPort0[2] = #150000 1'b0;
	inPort0[2] = #50000 1'b1;
end 
// inPort0[ 1 ]
initial
begin
	inPort0[1] = 1'b1;
	inPort0[1] = #50000 1'b0;
	inPort0[1] = #50000 1'b1;
	inPort0[1] = #100000 1'b0;
	inPort0[1] = #50000 1'b1;
	inPort0[1] = #50000 1'b0;
	inPort0[1] = #100000 1'b1;
	inPort0[1] = #100000 1'b0;
	inPort0[1] = #50000 1'b1;
	inPort0[1] = #50000 1'b0;
	inPort0[1] = #50000 1'b1;
	inPort0[1] = #50000 1'b0;
	inPort0[1] = #50000 1'b1;
	inPort0[1] = #150000 1'b0;
	inPort0[1] = #50000 1'b1;
end 
// inPort0[ 0 ]
initial
begin
	inPort0[0] = 1'b1;
	inPort0[0] = #50000 1'b0;
	inPort0[0] = #100000 1'b1;
	inPort0[0] = #50000 1'b0;
	inPort0[0] = #50000 1'b1;
	inPort0[0] = #100000 1'b0;
	inPort0[0] = #100000 1'b1;
	inPort0[0] = #350000 1'b0;
	inPort0[0] = #50000 1'b1;
	inPort0[0] = #50000 1'b0;
	inPort0[0] = #50000 1'b1;
end 
// inPort1[ 15 ]
initial
begin
	inPort1[15] = 1'b0;
	inPort1[15] = #100000 1'b1;
	inPort1[15] = #200000 1'b0;
	inPort1[15] = #50000 1'b1;
	inPort1[15] = #50000 1'b0;
	inPort1[15] = #200000 1'b1;
	inPort1[15] = #50000 1'b0;
	inPort1[15] = #50000 1'b1;
	inPort1[15] = #100000 1'b0;
	inPort1[15] = #50000 1'b1;
	inPort1[15] = #50000 1'b0;
	inPort1[15] = #50000 1'b1;
end 
// inPort1[ 14 ]
initial
begin
	inPort1[14] = 1'b0;
	inPort1[14] = #100000 1'b1;
	inPort1[14] = #50000 1'b0;
	inPort1[14] = #50000 1'b1;
	inPort1[14] = #250000 1'b0;
	inPort1[14] = #100000 1'b1;
	inPort1[14] = #100000 1'b0;
	inPort1[14] = #50000 1'b1;
	inPort1[14] = #50000 1'b0;
	inPort1[14] = #200000 1'b1;
end 
// inPort1[ 13 ]
initial
begin
	inPort1[13] = 1'b1;
	inPort1[13] = #50000 1'b0;
	inPort1[13] = #50000 1'b1;
	inPort1[13] = #100000 1'b0;
	inPort1[13] = #100000 1'b1;
	inPort1[13] = #150000 1'b0;
	inPort1[13] = #200000 1'b1;
	inPort1[13] = #50000 1'b0;
	inPort1[13] = #100000 1'b1;
end 
// inPort1[ 12 ]
initial
begin
	inPort1[12] = 1'b1;
	inPort1[12] = #150000 1'b0;
	inPort1[12] = #100000 1'b1;
	inPort1[12] = #200000 1'b0;
	inPort1[12] = #100000 1'b1;
	inPort1[12] = #250000 1'b0;
	inPort1[12] = #50000 1'b1;
end 
// inPort1[ 11 ]
initial
begin
	inPort1[11] = 1'b1;
	inPort1[11] = #150000 1'b0;
	inPort1[11] = #100000 1'b1;
	inPort1[11] = #150000 1'b0;
	inPort1[11] = #50000 1'b1;
	inPort1[11] = #50000 1'b0;
	inPort1[11] = #150000 1'b1;
	inPort1[11] = #300000 1'b0;
end 
// inPort1[ 10 ]
initial
begin
	inPort1[10] = 1'b1;
	inPort1[10] = #100000 1'b0;
	inPort1[10] = #100000 1'b1;
	inPort1[10] = #100000 1'b0;
	inPort1[10] = #150000 1'b1;
	inPort1[10] = #100000 1'b0;
	inPort1[10] = #50000 1'b1;
	inPort1[10] = #50000 1'b0;
	inPort1[10] = #100000 1'b1;
	inPort1[10] = #50000 1'b0;
	inPort1[10] = #100000 1'b1;
end 
// inPort1[ 9 ]
initial
begin
	inPort1[9] = 1'b1;
	inPort1[9] = #50000 1'b0;
	inPort1[9] = #50000 1'b1;
	inPort1[9] = #50000 1'b0;
	inPort1[9] = #150000 1'b1;
	inPort1[9] = #150000 1'b0;
	inPort1[9] = #100000 1'b1;
	inPort1[9] = #50000 1'b0;
	inPort1[9] = #150000 1'b1;
	inPort1[9] = #100000 1'b0;
	inPort1[9] = #50000 1'b1;
end 
// inPort1[ 8 ]
initial
begin
	inPort1[8] = 1'b1;
	inPort1[8] = #50000 1'b0;
	inPort1[8] = #150000 1'b1;
	inPort1[8] = #150000 1'b0;
	inPort1[8] = #150000 1'b1;
	inPort1[8] = #50000 1'b0;
	inPort1[8] = #150000 1'b1;
	inPort1[8] = #100000 1'b0;
	inPort1[8] = #150000 1'b1;
end 
// inPort1[ 7 ]
initial
begin
	inPort1[7] = 1'b0;
	inPort1[7] = #50000 1'b1;
	inPort1[7] = #50000 1'b0;
	inPort1[7] = #100000 1'b1;
	inPort1[7] = #150000 1'b0;
	inPort1[7] = #100000 1'b1;
	inPort1[7] = #450000 1'b0;
end 
// inPort1[ 6 ]
initial
begin
	inPort1[6] = 1'b0;
	inPort1[6] = #50000 1'b1;
	inPort1[6] = #50000 1'b0;
	inPort1[6] = #100000 1'b1;
	inPort1[6] = #150000 1'b0;
	inPort1[6] = #50000 1'b1;
	inPort1[6] = #200000 1'b0;
	inPort1[6] = #100000 1'b1;
	inPort1[6] = #50000 1'b0;
	inPort1[6] = #200000 1'b1;
end 
// inPort1[ 5 ]
initial
begin
	inPort1[5] = 1'b1;
	inPort1[5] = #100000 1'b0;
	inPort1[5] = #250000 1'b1;
	inPort1[5] = #200000 1'b0;
	inPort1[5] = #50000 1'b1;
	inPort1[5] = #100000 1'b0;
	inPort1[5] = #50000 1'b1;
	inPort1[5] = #50000 1'b0;
	inPort1[5] = #50000 1'b1;
	inPort1[5] = #50000 1'b0;
end 
// inPort1[ 4 ]
initial
begin
	inPort1[4] = 1'b0;
	inPort1[4] = #50000 1'b1;
	inPort1[4] = #400000 1'b0;
	inPort1[4] = #50000 1'b1;
	inPort1[4] = #100000 1'b0;
	inPort1[4] = #150000 1'b1;
	inPort1[4] = #50000 1'b0;
	inPort1[4] = #50000 1'b1;
	inPort1[4] = #100000 1'b0;
end 
// inPort1[ 3 ]
initial
begin
	inPort1[3] = 1'b1;
	inPort1[3] = #150000 1'b0;
	inPort1[3] = #50000 1'b1;
	inPort1[3] = #50000 1'b0;
	inPort1[3] = #100000 1'b1;
	inPort1[3] = #150000 1'b0;
	inPort1[3] = #50000 1'b1;
	inPort1[3] = #50000 1'b0;
	inPort1[3] = #250000 1'b1;
end 
// inPort1[ 2 ]
initial
begin
	inPort1[2] = 1'b1;
	inPort1[2] = #100000 1'b0;
	inPort1[2] = #50000 1'b1;
	inPort1[2] = #50000 1'b0;
	inPort1[2] = #100000 1'b1;
	inPort1[2] = #200000 1'b0;
	inPort1[2] = #150000 1'b1;
	inPort1[2] = #50000 1'b0;
	inPort1[2] = #200000 1'b1;
end 
// inPort1[ 1 ]
initial
begin
	inPort1[1] = 1'b1;
	inPort1[1] = #100000 1'b0;
	inPort1[1] = #100000 1'b1;
	inPort1[1] = #50000 1'b0;
	inPort1[1] = #50000 1'b1;
	inPort1[1] = #200000 1'b0;
	inPort1[1] = #50000 1'b1;
	inPort1[1] = #50000 1'b0;
	inPort1[1] = #50000 1'b1;
	inPort1[1] = #50000 1'b0;
	inPort1[1] = #50000 1'b1;
	inPort1[1] = #200000 1'b0;
end 
// inPort1[ 0 ]
initial
begin
	inPort1[0] = 1'b1;
	inPort1[0] = #50000 1'b0;
	inPort1[0] = #50000 1'b1;
	inPort1[0] = #50000 1'b0;
	inPort1[0] = #150000 1'b1;
	inPort1[0] = #50000 1'b0;
	inPort1[0] = #100000 1'b1;
	inPort1[0] = #50000 1'b0;
	inPort1[0] = #150000 1'b1;
	inPort1[0] = #50000 1'b0;
	inPort1[0] = #50000 1'b1;
	inPort1[0] = #50000 1'b0;
	inPort1[0] = #50000 1'b1;
end 
endmodule

